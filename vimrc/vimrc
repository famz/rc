syntax on

" Always show status
set autoindent
set smartindent
set autowriteall
set background=dark
set laststatus=2
set number
set smartcase
set ignorecase
set incsearch
set hlsearch
set hidden
set undodir=~/.cache/vimundo
set undofile
set list
set listchars=tab:>-
silent !mkdir -p ~/.cache/vimundo
set modeline

" Cursor shape
let &t_SI = "\<Esc>]50;CursorShape=1\x7"
let &t_SR = "\<Esc>]50;CursorShape=2\x7"
let &t_EI = "\<Esc>]50;CursorShape=0\x7"

let g:netrw_dirhistmax = 0
let mapleader = ","

if has("gui_running")
  " GUI is running or is about to start.
  " Maximize gvim window (for an alternative on Windows, see simalt below).
  set lines=999 columns=999
  set guifont=Terminus\ 14
  set guioptions-=m  "remove menu bar
  set guioptions-=T  "remove toolbar
  set guioptions-=r  "remove right-hand scroll bar
  set guioptions-=L  "remove left-hand scroll bar
  set mouse=v
  set clipboard=autoselectplus
endif

" Specify a directory for plugins
" - For Neovim: ~/.local/share/nvim/plugged
" - Avoid using standard Vim directory names like 'plugin'
call plug#begin('~/.cache/vimplug')

" Make sure you use single quotes

Plug 'farmergreg/vim-lastplace'
" Shorthand notation; fetches https://github.com/junegunn/vim-easy-align
Plug 'junegunn/vim-easy-align'

Plug 'SirVer/ultisnips' | Plug 'honza/vim-snippets'
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"

" On-demand loading
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
" Plug 'tpope/vim-fireplace', { 'for': 'clojure' }

" Using a tagged release; wildcard allowed (requires git 1.9.2 or above)
" Plug 'fatih/vim-go', { 'tag': '*' }

" Plugin options
" Plug 'nsf/gocode', { 'tag': 'v.20150303', 'rtp': 'vim' }

" Plugin outside ~/.vim/plugged with post-update hook
Plug 'junegunn/fzf', { 'do': './install --all' }
Plug 'junegunn/fzf.vim'
nnoremap <C-p> :Files<CR>
nnoremap <leader>m :History<CR>
nnoremap <leader>b :Buffer<CR>
nnoremap Y y$
nnoremap <F7> :make<CR>
nnoremap <C-]> :tjump <C-R><C-W><CR>
vnoremap <C-c> "+y

Plug 'majutsushi/tagbar'

python3 <<EOF
try:
    import powerline.vim
except:
    import os
    os.system("pip3 install powerline-status")
EOF
python3 from powerline.vim import setup as powerline_setup
python3 powerline_setup()
python3 del powerline_setup

Plug 'airblade/vim-gitgutter'
"Plug 'tpope/vim-fugitive'

" Colorscheme
Plug 'morhetz/gruvbox'

Plug 'rust-lang/rust.vim'

Plug 'dkprice/vim-easygrep'
let g:EasyGrepJumpToMatch=0
function! Highlighting()
  let @/ = '\<'.expand('<cword>').'\>'
endfunction
nnoremap <silent> <leader>g :vimgrep "\C\<<C-R><C-W>\>"/\C %<CR>:call Highlighting()<CR>:cw<CR>:silent set hlsearch<CR>
" Map global search to EasyGrep command
nnoremap <silent> <leader>G :Ggrep "\<<C-R><C-W>\>"<CR>:cw<CR>
nnoremap <leader>? :Ggrep 

Plug 'posva/vim-vue'

" Automatically set directory to your project's root based on a known dir/file.
Plug 'dylanaraps/root.vim'
" For root plugin
let g:root#auto = 1
let g:root#echo = 0

" Initialize plugin system
call plug#end()

nnoremap <leader>T :TagbarToggle<CR>

nnoremap QQ :qall<CR>
inoremap <C-v> <Esc>"+gpa

command W w !sudo tee "%" > /dev/null

au BufEnter * call MyLastWindow()
function! MyLastWindow()
  " if the window is quickfix go on
  if &buftype=="quickfix"
    " if this window is last on screen quit without warning
    if winbufnr(2) == -1
      quit!
    endif
  endif
endfunction

autocmd FileType yaml set shiftwidth=2 | set tabstop=4
autocmd FileType markdown set shiftwidth=4 | set tabstop=4
autocmd FileType make set shiftwidth=8 | set tabstop=8
autocmd Filetype c,cpp,rust set cino+=(0

function SensibleIndent()
    if getcwd() =~ "/linux" || getcwd() =~ "brimstone"
        set noet
        set ts=8
        set sw=8
    endif
endfunction
autocmd BufEnter *.[ch] call SensibleIndent()
autocmd BufEnter *.[ch]pp call SensibleIndent()

" For gotags

let g:tagbar_type_go = {
	\ 'ctagstype' : 'go',
	\ 'kinds'     : [
		\ 'p:package',
		\ 'i:imports:1',
		\ 'c:constants',
		\ 'v:variables',
		\ 't:types',
		\ 'n:interfaces',
		\ 'w:fields',
		\ 'e:embedded',
		\ 'm:methods',
		\ 'r:constructor',
		\ 'f:functions'
	\ ],
	\ 'sro' : '.',
	\ 'kind2scope' : {
		\ 't' : 'ctype',
		\ 'n' : 'ntype'
	\ },
	\ 'scope2kind' : {
		\ 'ctype' : 't',
		\ 'ntype' : 'n'
	\ },
	\ 'ctagsbin'  : 'gotags',
	\ 'ctagsargs' : '-sort -silent'
\ }

colorscheme gruvbox

set tabstop=4 shiftwidth=4 expandtab
autocmd filetype javascript,typescript,yaml,vue setlocal tabstop=2 shiftwidth=2 expandtab
